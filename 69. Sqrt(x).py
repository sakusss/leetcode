class Solution:
    def mySqrt(self, x):
        """
        :type x: int
        :rtype: int
        """

        l = 0 
        r = x//2+1
        
        while l <= r:
            
            m = (l+r) // 2
            
            if x>= m**2 and x < (m+1)**2:
                
                return m
            
            if  x < m**2:
                
                r = m-1
                
            if  m**2 < x :
                
                l = m+1
                
        # return 0
        
       ## 二分查找法 要求是知道结果的范围，取定左边界和右边界，然后每次砍掉不满足条件的一半
       ## 直到左边和右边相遇
       ## 算法的时间复杂度是O（logn），空间复杂度是O（1）
       
       ##实际面试遇到的题目可能不是对一个整数开方，而是对一个实数。
       ##方法和整数其实是一致的，只是结束条件换成左界和右界的差的绝对值小于某一个epsilon（极小值）即可。
       ##这里注意一个小问题，就是在java中我们可以用==来判断两个double是否相等，
       ##而在C++中我们则需要通过两个数的绝对值差小于某个极小值来判断两个double的相等性。
       ##实际上两个double因为精度问题往往是不可能每一位完全相等的，java中只是帮我们做了这种判定。
       
        
